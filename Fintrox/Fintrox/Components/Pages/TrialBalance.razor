@page "/reports/trial-balance"
@using System
@using System.Threading.Tasks
@using Fintrox.Application.Accounting
@inject IAccountingService Acc

<PageTitle>Trial Balance</PageTitle>

<h3>Trial Balance</h3>

<div class="row g-3 align-items-end mb-3">
    <div class="col-md-3">
        <label class="form-label">From</label>
        <InputDate @bind-Value="from" class="form-control" />
    </div>
    <div class="col-md-3">
        <label class="form-label">To</label>
        <InputDate @bind-Value="to" class="form-control" />
    </div>
    <div class="col-md-3">
        <button class="btn btn-primary" @onclick="LoadAsync">Load</button>
    </div>
</div>

@if (tb is null)
{
    <p>Choose period and click Load.</p>
}
else
{
    <table class="table table-sm table-dark table-striped align-middle">
        <thead>
            <tr>
                <th style="width:120px">Code</th>
                <th>Name</th>
                <th class="text-end" style="width:140px">Debit</th>
                <th class="text-end" style="width:140px">Credit</th>
                <th class="text-end" style="width:140px">Balance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var r in tb.Rows)
            {
                <tr>
                    <td>@r.AccountCode</td>
                    <td>@r.AccountName</td>
                    <td class="text-end">@r.Debit.ToString("N2")</td>
                    <td class="text-end">@r.Credit.ToString("N2")</td>
                    <td class="text-end">@r.Balance.ToString("N2")</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="fw-bold @(tb.TotalDebit == tb.TotalCredit ? "table-success" : "table-danger")">
                <td colspan="2" class="text-end">Totals:</td>
                <td class="text-end">@tb.TotalDebit.ToString("N2")</td>
                <td class="text-end">@tb.TotalCredit.ToString("N2")</td>
                <td class="text-end">@((tb.TotalDebit - tb.TotalCredit).ToString("N2"))</td>
            </tr>
        </tfoot>
    </table>
}

@code {
    private DateTime from = new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1);
    private DateTime to = new DateTime(DateTime.Today.Year, DateTime.Today.Month,
        DateTime.DaysInMonth(DateTime.Today.Year, DateTime.Today.Month));
    private TrialBalanceDto? tb;

    protected override async Task OnInitializedAsync() => await LoadAsync();

    private async Task LoadAsync()
    {
        tb = await Acc.GetTrialBalanceAsync(from, to);
    }
}
